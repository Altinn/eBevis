{
	"info": {
		"_postman_id": "f4546486-57cd-46fd-be2a-bdb77ea88461",
		"name": "eBevis",
		"description": "eBevis Acceptance Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Metadata",
			"item": [
				{
					"name": "metadata/evidencecodes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eafeca1f-0013-42c4-85ef-2edd704ecdb6",
								"exec": [
									"pm.test(\"Has evidence codes\", function () {",
									"    var ret = pm.response.json();",
									"",
									"    pm.expect(ret.length).to.be.above(0);",
									"    pm.expect(typeof ret[0][\"evidenceCodeName\"]).to.equal(\"string\");",
									"    pm.expect(ret[0][\"evidenceCodeName\"].length).to.be.above(0);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{SubscriptionKey}}",
								"type": "text"
							},
							{
								"key": "X-NADOBE-CERT",
								"value": "{{HeaderCertificate}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/metadata/evidencecodes",
							"protocol": "{{Scheme}}",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"{{Environment}}",
								"{{ApiVersion}}",
								"metadata",
								"evidencecodes"
							]
						}
					},
					"response": []
				},
				{
					"name": "metadata/statuscodes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f8d6b815-722d-4cf5-883c-277f57afadd6",
								"exec": [
									"pm.test(\"Has status codes\", function () {",
									"    var ret = pm.response.json();",
									"    ",
									"    pm.expect(ret.length).to.be.above(0);",
									"    pm.expect(typeof ret[0][\"description\"]).to.equal(\"string\");",
									"    pm.expect(ret[0][\"description\"].length).to.be.above(0);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/metadata/statuscodes",
							"protocol": "{{Scheme}}",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"{{Environment}}",
								"{{ApiVersion}}",
								"metadata",
								"statuscodes"
							]
						}
					},
					"response": []
				},
				{
					"name": "metadata/errorcodes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "19c23d7d-2456-4584-9adb-0d01f1c73fc0",
								"exec": [
									"pm.test(\"Has status codes\", function () {",
									"    var ret = pm.response.json();",
									"    ",
									"    pm.expect(ret.length).to.be.above(0);",
									"    pm.expect(typeof ret[0][\"description\"]).to.equal(\"string\");",
									"    pm.expect(ret[0][\"description\"].length).to.be.above(0);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/metadata/errorcodes?Ocp-Apim-Subscription-Key={{SubscriptionKey}}&X-NADOBE-CERT={{HeaderCertificate}}",
							"protocol": "{{Scheme}}",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"{{Environment}}",
								"{{ApiVersion}}",
								"metadata",
								"errorcodes"
							],
							"query": [
								{
									"key": "Ocp-Apim-Subscription-Key",
									"value": "{{SubscriptionKey}}"
								},
								{
									"key": "X-NADOBE-CERT",
									"value": "{{HeaderCertificate}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e861b1a0-ef51-4c5f-a3d5-a9249a6ddeef",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ca6409e2-edb3-46ca-bbb2-5e907c9b5fda",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Has valid JSON structure in response\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(typeof jsonData).to.equal(\"object\");",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "List of accreditations",
			"item": [
				{
					"name": "accreditations",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b39f7dfa-47f0-4ee8-892c-6826ffbf5fee",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Ocp-Apim-Subscription-Key",
								"value": "{{SubscriptionKey}}",
								"type": "text"
							},
							{
								"key": "X-NADOBE-CERT",
								"value": "{{HeaderCertificate}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/accreditations",
							"protocol": "{{Scheme}}",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"{{Environment}}",
								"{{ApiVersion}}",
								"accreditations"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b7506dde-d6f8-4dd3-9ce3-f76949f08a97",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "7cd8e9c8-e28b-497b-84ce-911c2197705a",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Has valid JSON structure in response\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(typeof jsonData).to.equal(\"object\");",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "Runnables",
			"item": [
				{
					"name": "CRITERION.SELECTION.SUITABILITY.TRADE_REGISTER_ENROLMENT",
					"item": [
						{
							"name": "authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77dc7775-5a87-448c-8ff4-8d78e0c30a3a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has valid JSON structure in response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(typeof jsonData).to.equal(\"object\");",
											"});",
											"",
											"pm.test(\"Location header is present\", function () {",
											"    pm.response.to.have.header(\"Location\");",
											"});",
											"",
											"// Set accreditation ID to global in order to use in subsequent requests",
											"var loc = pm.response.headers.get(\"Location\");",
											"var accreditationId = loc.match(/\\/evidence\\/(.+)/)[1];",
											"pm.environment.set(\"AccreditationId\", accreditationId);",
											"",
											"pm.test(\"Has accreditation id in response matching location header\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"id\"]).to.equal(accreditationId);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"requestor\": {{RequestorOrgNo}},\r\n  \"subject\": {{SubjectOrgNo}},\r\n  \"evidenceRequests\": [\r\n    {\r\n      \"evidenceCodeName\": \"CRITERION.SELECTION.SUITABILITY.TRADE_REGISTER_ENROLMENT\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/authorization",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"authorization"
									]
								}
							},
							"response": []
						},
						{
							"name": "evidence/<accreditation-id>",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dba7959a-7338-4bec-bd5c-b15820f3ff58",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has valid JSON structure in response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(typeof jsonData).to.equal(\"object\");",
											"});",
											"",
											"pm.test(\"Has evidence code name in JSON response\", function () {",
											"    var ret = pm.response.json();",
											"",
											"    pm.expect(ret.length).to.be.above(0);",
											"    pm.expect(typeof ret[0][\"evidenceCodeName\"]).to.equal(\"string\");",
											"    pm.expect(ret[0][\"evidenceCodeName\"].length).to.be.above(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/evidence/{{AccreditationId}}",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"evidence",
										"{{AccreditationId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "evidence/<accreditation-id>/CRITERION.SELECTION.SUITABILITY.TRADE_REGISTER_ENROLMENT",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ba6f1ecb-d1e7-44e4-bcd8-9381b22b4357",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has valid JSON structure in response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(typeof jsonData).to.equal(\"object\");",
											"});",
											"",
											"pm.test(\"Has evidence status and values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"evidenceStatus\"][\"evidenceCodeName\"] !== null).to.be.true;",
											"    pm.expect(jsonData[\"evidenceValues\"].length).to.be.above(0);",
											"    pm.expect(jsonData[\"evidenceValues\"][0][\"value\"] !== null).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/evidence/{{AccreditationId}}/CRITERION.SELECTION.SUITABILITY.TRADE_REGISTER_ENROLMENT",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"evidence",
										"{{AccreditationId}}",
										"CRITERION.SELECTION.SUITABILITY.TRADE_REGISTER_ENROLMENT"
									]
								}
							},
							"response": []
						},
						{
							"name": "evidence/<accreditation-id>",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "885f1f97-c00f-461c-bfcf-6310afe15811",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											"",
											"pm.test(\"Has empty body\", function () {",
											"    pm.response.to.have.body(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/accreditations/{{AccreditationId}}",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"accreditations",
										"{{AccreditationId}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "CRITERION.SELECTION.ECONOMIC_FINANCIAL_STANDING.TURNOVER.SET_UP",
					"item": [
						{
							"name": "authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77dc7775-5a87-448c-8ff4-8d78e0c30a3a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has valid JSON structure in response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(typeof jsonData).to.equal(\"object\");",
											"});",
											"",
											"pm.test(\"Location header is present\", function () {",
											"    pm.response.to.have.header(\"Location\");",
											"});",
											"",
											"// Set accreditation ID to global in order to use in subsequent requests",
											"var loc = pm.response.headers.get(\"Location\");",
											"var accreditationId = loc.match(/\\/evidence\\/(.+)/)[1];",
											"pm.environment.set(\"AccreditationId\", accreditationId);",
											"",
											"pm.test(\"Has accreditation id in response matching location header\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"id\"]).to.equal(accreditationId);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"requestor\": {{RequestorOrgNo}},\r\n  \"subject\": {{SubjectOrgNo}},\r\n  \"evidenceRequests\": [\r\n    {\r\n      \"evidenceCodeName\": \"CRITERION.SELECTION.ECONOMIC_FINANCIAL_STANDING.TURNOVER.SET_UP\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/authorization",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"authorization"
									]
								}
							},
							"response": []
						},
						{
							"name": "evidence/<accreditation-id>",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dba7959a-7338-4bec-bd5c-b15820f3ff58",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has valid JSON structure in response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(typeof jsonData).to.equal(\"object\");",
											"});",
											"",
											"pm.test(\"Has evidence code name in JSON response\", function () {",
											"    var ret = pm.response.json();",
											"",
											"    pm.expect(ret.length).to.be.above(0);",
											"    pm.expect(typeof ret[0][\"evidenceCodeName\"]).to.equal(\"string\");",
											"    pm.expect(ret[0][\"evidenceCodeName\"].length).to.be.above(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/evidence/{{AccreditationId}}",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"evidence",
										"{{AccreditationId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "evidence/<accreditation-id>/CRITERION.SELECTION.ECONOMIC_FINANCIAL_STANDING.TURNOVER.SET_UP",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ba6f1ecb-d1e7-44e4-bcd8-9381b22b4357",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has valid JSON structure in response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(typeof jsonData).to.equal(\"object\");",
											"});",
											"",
											"pm.test(\"Has evidence status and values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"evidenceStatus\"][\"evidenceCodeName\"] !== null).to.be.true;",
											"    pm.expect(jsonData[\"evidenceValues\"].length).to.be.above(0);",
											"    pm.expect(jsonData[\"evidenceValues\"][0][\"value\"] !== null).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"type": "text",
										"value": "{{SubscriptionKey}}"
									},
									{
										"key": "X-NADOBE-CERT",
										"type": "text",
										"value": "{{HeaderCertificate}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/evidence/{{AccreditationId}}/CRITERION.SELECTION.ECONOMIC_FINANCIAL_STANDING.TURNOVER.SET_UP",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"evidence",
										"{{AccreditationId}}",
										"CRITERION.SELECTION.ECONOMIC_FINANCIAL_STANDING.TURNOVER.SET_UP"
									]
								}
							},
							"response": []
						},
						{
							"name": "evidence/<accreditation-id>",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "885f1f97-c00f-461c-bfcf-6310afe15811",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											"",
											"pm.test(\"Has empty body\", function () {",
											"    pm.response.to.have.body(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/accreditations/{{AccreditationId}}",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"accreditations",
										"{{AccreditationId}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "CRITERION.EXCLUSION.BUSINESS.INSOLVENCY",
					"item": [
						{
							"name": "authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77dc7775-5a87-448c-8ff4-8d78e0c30a3a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has valid JSON structure in response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(typeof jsonData).to.equal(\"object\");",
											"});",
											"",
											"pm.test(\"Location header is present\", function () {",
											"    pm.response.to.have.header(\"Location\");",
											"});",
											"",
											"// Set accreditation ID to global in order to use in subsequent requests",
											"var loc = pm.response.headers.get(\"Location\");",
											"var accreditationId = loc.match(/\\/evidence\\/(.+)/)[1];",
											"pm.environment.set(\"AccreditationId\", accreditationId);",
											"",
											"pm.test(\"Has accreditation id in response matching location header\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"id\"]).to.equal(accreditationId);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"requestor\": {{RequestorOrgNo}},\r\n  \"subject\": {{SubjectOrgNo}},\r\n  \"evidenceRequests\": [\r\n    {\r\n      \"evidenceCodeName\": \"CRITERION.EXCLUSION.BUSINESS.INSOLVENCY\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/authorization",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"authorization"
									]
								}
							},
							"response": []
						},
						{
							"name": "evidence/<accreditation-id>",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dba7959a-7338-4bec-bd5c-b15820f3ff58",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has valid JSON structure in response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(typeof jsonData).to.equal(\"object\");",
											"});",
											"",
											"pm.test(\"Has evidence code name in JSON response\", function () {",
											"    var ret = pm.response.json();",
											"",
											"    pm.expect(ret.length).to.be.above(0);",
											"    pm.expect(typeof ret[0][\"evidenceCodeName\"]).to.equal(\"string\");",
											"    pm.expect(ret[0][\"evidenceCodeName\"].length).to.be.above(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/evidence/{{AccreditationId}}",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"evidence",
										"{{AccreditationId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "evidence/<accreditation-id>/CRITERION.EXCLUSION.BUSINESS.INSOLVENCY",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ba6f1ecb-d1e7-44e4-bcd8-9381b22b4357",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has valid JSON structure in response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(typeof jsonData).to.equal(\"object\");",
											"});",
											"",
											"pm.test(\"Has evidence status and values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"evidenceStatus\"][\"evidenceCodeName\"] !== null).to.be.true;",
											"    pm.expect(jsonData[\"evidenceValues\"].length).to.be.above(0);",
											"    pm.expect(jsonData[\"evidenceValues\"][0][\"value\"] !== null).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/evidence/{{AccreditationId}}/CRITERION.EXCLUSION.BUSINESS.INSOLVENCY",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"evidence",
										"{{AccreditationId}}",
										"CRITERION.EXCLUSION.BUSINESS.INSOLVENCY"
									]
								}
							},
							"response": []
						},
						{
							"name": "evidence/<accreditation-id>",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "885f1f97-c00f-461c-bfcf-6310afe15811",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											"",
											"pm.test(\"Has empty body\", function () {",
											"    pm.response.to.have.body(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/accreditations/{{AccreditationId}}",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"accreditations",
										"{{AccreditationId}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "CRITERION.SELECTION.TECHNICAL_PROFESSIONAL_ABILITY.MANAGEMENT.MANAGERIAL_STAFF",
					"item": [
						{
							"name": "authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77dc7775-5a87-448c-8ff4-8d78e0c30a3a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has valid JSON structure in response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(typeof jsonData).to.equal(\"object\");",
											"});",
											"",
											"pm.test(\"Location header is present\", function () {",
											"    pm.response.to.have.header(\"Location\");",
											"});",
											"",
											"// Set accreditation ID to global in order to use in subsequent requests",
											"var loc = pm.response.headers.get(\"Location\");",
											"var accreditationId = loc.match(/\\/evidence\\/(.+)/)[1];",
											"pm.environment.set(\"AccreditationId\", accreditationId);",
											"",
											"pm.test(\"Has accreditation id in response matching location header\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"id\"]).to.equal(accreditationId);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"requestor\": {{RequestorOrgNo}},\r\n  \"subject\": {{SubjectOrgNo}},\r\n  \"evidenceRequests\": [\r\n    {\r\n      \"evidenceCodeName\": \"CRITERION.SELECTION.TECHNICAL_PROFESSIONAL_ABILITY.MANAGEMENT.MANAGERIAL_STAFF\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/authorization",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"authorization"
									]
								}
							},
							"response": []
						},
						{
							"name": "evidence/<accreditation-id>",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dba7959a-7338-4bec-bd5c-b15820f3ff58",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has valid JSON structure in response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(typeof jsonData).to.equal(\"object\");",
											"});",
											"",
											"pm.test(\"Has evidence code name in JSON response\", function () {",
											"    var ret = pm.response.json();",
											"",
											"    pm.expect(ret.length).to.be.above(0);",
											"    pm.expect(typeof ret[0][\"evidenceCodeName\"]).to.equal(\"string\");",
											"    pm.expect(ret[0][\"evidenceCodeName\"].length).to.be.above(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/evidence/{{AccreditationId}}",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"evidence",
										"{{AccreditationId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "evidence/<accreditation-id>/CRITERION.SELECTION.TECHNICAL_PROFESSIONAL_ABILITY.MANAGEMENT.MANAGERIAL_STAFF",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ba6f1ecb-d1e7-44e4-bcd8-9381b22b4357",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has valid JSON structure in response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(typeof jsonData).to.equal(\"object\");",
											"});",
											"",
											"pm.test(\"Has evidence status and values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"evidenceStatus\"][\"evidenceCodeName\"] !== null).to.be.true;",
											"    pm.expect(jsonData[\"evidenceValues\"].length).to.be.above(0);",
											"    pm.expect(jsonData[\"evidenceValues\"][0][\"value\"] !== null).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/evidence/{{AccreditationId}}/CRITERION.SELECTION.TECHNICAL_PROFESSIONAL_ABILITY.MANAGEMENT.MANAGERIAL_STAFF",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"evidence",
										"{{AccreditationId}}",
										"CRITERION.SELECTION.TECHNICAL_PROFESSIONAL_ABILITY.MANAGEMENT.MANAGERIAL_STAFF"
									]
								}
							},
							"response": []
						},
						{
							"name": "evidence/<accreditation-id>",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "885f1f97-c00f-461c-bfcf-6310afe15811",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											"",
											"pm.test(\"Has empty body\", function () {",
											"    pm.response.to.have.body(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/accreditations/{{AccreditationId}}",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"accreditations",
										"{{AccreditationId}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "CRITERION.SELECTION.ECONOMIC_FINANCIAL_STANDING.TURNOVER.GENERAL_YEARLY (2 years)",
					"item": [
						{
							"name": "authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77dc7775-5a87-448c-8ff4-8d78e0c30a3a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has valid JSON structure in response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(typeof jsonData).to.equal(\"object\");",
											"});",
											"",
											"pm.test(\"Location header is present\", function () {",
											"    pm.response.to.have.header(\"Location\");",
											"});",
											"",
											"// Set accreditation ID to global in order to use in subsequent requests",
											"var loc = pm.response.headers.get(\"Location\");",
											"var accreditationId = loc.match(/\\/evidence\\/(.+)/)[1];",
											"pm.environment.set(\"AccreditationId\", accreditationId);",
											"",
											"pm.test(\"Has accreditation id in response matching location header\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"id\"]).to.equal(accreditationId);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"requestor\": {{RequestorOrgNo}},\r\n  \"subject\": {{SubjectOrgNo}},\r\n  \"evidenceRequests\": [\r\n    {\r\n      \"evidenceCodeName\": \"CRITERION.SELECTION.ECONOMIC_FINANCIAL_STANDING.TURNOVER.GENERAL_YEARLY\",\r\n\t  \"parameters\" : [\r\n\t\t{\r\n\t\t\t\"evidenceParamName\" : \"NumberOfYears\",\r\n\t\t\t\"value\" : 2\r\n\t\t}]\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/authorization",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"authorization"
									]
								}
							},
							"response": []
						},
						{
							"name": "evidence/<accreditation-id>",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dba7959a-7338-4bec-bd5c-b15820f3ff58",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has valid JSON structure in response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(typeof jsonData).to.equal(\"object\");",
											"});",
											"",
											"pm.test(\"Has evidence code name in JSON response\", function () {",
											"    var ret = pm.response.json();",
											"",
											"    pm.expect(ret.length).to.be.above(0);",
											"    pm.expect(typeof ret[0][\"evidenceCodeName\"]).to.equal(\"string\");",
											"    pm.expect(ret[0][\"evidenceCodeName\"].length).to.be.above(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/evidence/{{AccreditationId}}",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"evidence",
										"{{AccreditationId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "evidence/<accreditation-id>/CRITERION.SELECTION.ECONOMIC_FINANCIAL_STANDING.TURNOVER.GENERAL_YEARLY",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ba6f1ecb-d1e7-44e4-bcd8-9381b22b4357",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has valid JSON structure in response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(typeof jsonData).to.equal(\"object\");",
											"});",
											"",
											"pm.test(\"Has evidence status and values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"evidenceStatus\"][\"evidenceCodeName\"] !== null).to.be.true;",
											"    pm.expect(jsonData[\"evidenceValues\"].length).to.be.above(0);",
											"    pm.expect(jsonData[\"evidenceValues\"][0][\"value\"] !== null).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"type": "text",
										"value": "{{SubscriptionKey}}"
									},
									{
										"key": "X-NADOBE-CERT",
										"type": "text",
										"value": "{{HeaderCertificate}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/evidence/{{AccreditationId}}/CRITERION.SELECTION.ECONOMIC_FINANCIAL_STANDING.TURNOVER.GENERAL_YEARLY",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"evidence",
										"{{AccreditationId}}",
										"CRITERION.SELECTION.ECONOMIC_FINANCIAL_STANDING.TURNOVER.GENERAL_YEARLY"
									]
								}
							},
							"response": []
						},
						{
							"name": "evidence/<accreditation-id>",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "885f1f97-c00f-461c-bfcf-6310afe15811",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											"",
											"pm.test(\"Has empty body\", function () {",
											"    pm.response.to.have.body(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/accreditations/{{AccreditationId}}",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"accreditations",
										"{{AccreditationId}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "CRITERION.EXCLUSION.BUSINESS.BANKRUPTCY",
					"item": [
						{
							"name": "authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77dc7775-5a87-448c-8ff4-8d78e0c30a3a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has valid JSON structure in response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(typeof jsonData).to.equal(\"object\");",
											"});",
											"",
											"pm.test(\"Location header is present\", function () {",
											"    pm.response.to.have.header(\"Location\");",
											"});",
											"",
											"// Set accreditation ID to global in order to use in subsequent requests",
											"var loc = pm.response.headers.get(\"Location\");",
											"var accreditationId = loc.match(/\\/evidence\\/(.+)/)[1];",
											"pm.environment.set(\"AccreditationId\", accreditationId);",
											"",
											"pm.test(\"Has accreditation id in response matching location header\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"id\"]).to.equal(accreditationId);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"requestor\": {{RequestorOrgNo}},\r\n  \"subject\": {{SubjectOrgNo}},\r\n  \"evidenceRequests\": [\r\n    {\r\n      \"evidenceCodeName\": \"CRITERION.EXCLUSION.BUSINESS.BANKRUPTCY\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/authorization",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"authorization"
									]
								}
							},
							"response": []
						},
						{
							"name": "evidence/<accreditation-id>",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dba7959a-7338-4bec-bd5c-b15820f3ff58",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has valid JSON structure in response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(typeof jsonData).to.equal(\"object\");",
											"});",
											"",
											"pm.test(\"Has evidence code name in JSON response\", function () {",
											"    var ret = pm.response.json();",
											"",
											"    pm.expect(ret.length).to.be.above(0);",
											"    pm.expect(typeof ret[0][\"evidenceCodeName\"]).to.equal(\"string\");",
											"    pm.expect(ret[0][\"evidenceCodeName\"].length).to.be.above(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/evidence/{{AccreditationId}}",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"evidence",
										"{{AccreditationId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "evidence/<accreditation-id>/CRITERION.EXCLUSION.BUSINESS.BANKRUPTCY",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ba6f1ecb-d1e7-44e4-bcd8-9381b22b4357",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has valid JSON structure in response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(typeof jsonData).to.equal(\"object\");",
											"});",
											"",
											"pm.test(\"Has evidence status and values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"evidenceStatus\"][\"evidenceCodeName\"] !== null).to.be.true;",
											"    pm.expect(jsonData[\"evidenceValues\"].length).to.be.above(0);",
											"    pm.expect(jsonData[\"evidenceValues\"][0][\"value\"] !== null).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"type": "text",
										"value": "{{SubscriptionKey}}"
									},
									{
										"key": "X-NADOBE-CERT",
										"type": "text",
										"value": "{{HeaderCertificate}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/evidence/{{AccreditationId}}/CRITERION.EXCLUSION.BUSINESS.BANKRUPTCY",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"evidence",
										"{{AccreditationId}}",
										"CRITERION.EXCLUSION.BUSINESS.BANKRUPTCY"
									]
								}
							},
							"response": []
						},
						{
							"name": "evidence/<accreditation-id>",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "885f1f97-c00f-461c-bfcf-6310afe15811",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											"",
											"pm.test(\"Has empty body\", function () {",
											"    pm.response.to.have.body(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/accreditations/{{AccreditationId}}",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"accreditations",
										"{{AccreditationId}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "CertificateOfRegistration",
					"item": [
						{
							"name": "authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77dc7775-5a87-448c-8ff4-8d78e0c30a3a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has valid JSON structure in response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(typeof jsonData).to.equal(\"object\");",
											"});",
											"",
											"pm.test(\"Location header is present\", function () {",
											"    pm.response.to.have.header(\"Location\");",
											"});",
											"",
											"// Set accreditation ID to global in order to use in subsequent requests",
											"var loc = pm.response.headers.get(\"Location\");",
											"var accreditationId = loc.match(/\\/evidence\\/(.+)/)[1];",
											"pm.environment.set(\"AccreditationId\", accreditationId);",
											"",
											"pm.test(\"Has accreditation id in response matching location header\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"id\"]).to.equal(accreditationId);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"requestor\": {{RequestorOrgNo}},\r\n  \"subject\": {{SubjectOrgNo}},\r\n  \"evidenceRequests\": [\r\n    {\r\n      \"evidenceCodeName\": \"CertificateOfRegistration\",\r\n\t  \"parameters\" : [\r\n\t\t{\r\n\t\t\t\"evidenceParamName\" : \"NumberOfYears\",\r\n\t\t\t\"paramType\" : 2,\r\n\t\t\t\"required\" : true,\r\n\t\t\t\"value\" : 2\r\n\t\t}]\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/authorization",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"authorization"
									]
								}
							},
							"response": []
						},
						{
							"name": "evidence/<accreditation-id>",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dba7959a-7338-4bec-bd5c-b15820f3ff58",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has valid JSON structure in response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(typeof jsonData).to.equal(\"object\");",
											"});",
											"",
											"pm.test(\"Has evidence code name in JSON response\", function () {",
											"    var ret = pm.response.json();",
											"",
											"    pm.expect(ret.length).to.be.above(0);",
											"    pm.expect(typeof ret[0][\"evidenceCodeName\"]).to.equal(\"string\");",
											"    pm.expect(ret[0][\"evidenceCodeName\"].length).to.be.above(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/evidence/{{AccreditationId}}",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"evidence",
										"{{AccreditationId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "evidence/<accreditation-id>/CertificateOfRegistration",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ba6f1ecb-d1e7-44e4-bcd8-9381b22b4357",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has valid JSON structure in response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(typeof jsonData).to.equal(\"object\");",
											"});",
											"",
											"pm.test(\"Has evidence status and values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"evidenceStatus\"][\"evidenceCodeName\"] !== null).to.be.true;",
											"    pm.expect(jsonData[\"evidenceValues\"].length).to.be.above(0);",
											"    pm.expect(jsonData[\"evidenceValues\"][0][\"value\"] !== null).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"type": "text",
										"value": "{{SubscriptionKey}}"
									},
									{
										"key": "X-NADOBE-CERT",
										"type": "text",
										"value": "{{HeaderCertificate}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/evidence/{{AccreditationId}}/CertificateOfRegistration",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"evidence",
										"{{AccreditationId}}",
										"CertificateOfRegistration"
									]
								}
							},
							"response": []
						},
						{
							"name": "evidence/<accreditation-id>",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "885f1f97-c00f-461c-bfcf-6310afe15811",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											"",
											"pm.test(\"Has empty body\", function () {",
											"    pm.response.to.have.body(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/accreditations/{{AccreditationId}}",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"accreditations",
										"{{AccreditationId}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "UnitBasicInformation",
					"item": [
						{
							"name": "authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77dc7775-5a87-448c-8ff4-8d78e0c30a3a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has valid JSON structure in response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(typeof jsonData).to.equal(\"object\");",
											"});",
											"",
											"pm.test(\"Location header is present\", function () {",
											"    pm.response.to.have.header(\"Location\");",
											"});",
											"",
											"// Set accreditation ID to global in order to use in subsequent requests",
											"var loc = pm.response.headers.get(\"Location\");",
											"var accreditationId = loc.match(/\\/evidence\\/(.+)/)[1];",
											"pm.environment.set(\"AccreditationId\", accreditationId);",
											"",
											"pm.test(\"Has accreditation id in response matching location header\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"id\"]).to.equal(accreditationId);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"requestor\": {{RequestorOrgNo}},\r\n  \"subject\": {{SubjectOrgNo}},\r\n  \"evidenceRequests\": [\r\n    {\r\n      \"evidenceCodeName\": \"UnitBasicInformation\"\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/authorization",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"authorization"
									]
								}
							},
							"response": []
						},
						{
							"name": "evidence/<accreditation-id>",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dba7959a-7338-4bec-bd5c-b15820f3ff58",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has valid JSON structure in response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(typeof jsonData).to.equal(\"object\");",
											"});",
											"",
											"pm.test(\"Has evidence code name in JSON response\", function () {",
											"    var ret = pm.response.json();",
											"",
											"    pm.expect(ret.length).to.be.above(0);",
											"    pm.expect(typeof ret[0][\"evidenceCodeName\"]).to.equal(\"string\");",
											"    pm.expect(ret[0][\"evidenceCodeName\"].length).to.be.above(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/evidence/{{AccreditationId}}",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"evidence",
										"{{AccreditationId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "evidence/<accreditation-id>/UnitBasicInformation",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ba6f1ecb-d1e7-44e4-bcd8-9381b22b4357",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has valid JSON structure in response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(typeof jsonData).to.equal(\"object\");",
											"});",
											"",
											"pm.test(\"Has evidence status and values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"evidenceStatus\"][\"evidenceCodeName\"] !== null).to.be.true;",
											"    pm.expect(jsonData[\"evidenceValues\"].length).to.be.above(0);",
											"    pm.expect(jsonData[\"evidenceValues\"][0][\"value\"] !== null).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"type": "text",
										"value": "{{SubscriptionKey}}"
									},
									{
										"key": "X-NADOBE-CERT",
										"type": "text",
										"value": "{{HeaderCertificate}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/evidence/{{AccreditationId}}/UnitBasicInformation",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"evidence",
										"{{AccreditationId}}",
										"UnitBasicInformation"
									]
								}
							},
							"response": []
						},
						{
							"name": "evidence/<accreditation-id>",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "885f1f97-c00f-461c-bfcf-6310afe15811",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											"",
											"pm.test(\"Has empty body\", function () {",
											"    pm.response.to.have.body(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/accreditations/{{AccreditationId}}",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"accreditations",
										"{{AccreditationId}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "AnnualFinancialReport (2 years)",
					"item": [
						{
							"name": "authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77dc7775-5a87-448c-8ff4-8d78e0c30a3a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has valid JSON structure in response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(typeof jsonData).to.equal(\"object\");",
											"});",
											"",
											"pm.test(\"Location header is present\", function () {",
											"    pm.response.to.have.header(\"Location\");",
											"});",
											"",
											"// Set accreditation ID to global in order to use in subsequent requests",
											"var loc = pm.response.headers.get(\"Location\");",
											"var accreditationId = loc.match(/\\/evidence\\/(.+)/)[1];",
											"pm.environment.set(\"AccreditationId\", accreditationId);",
											"",
											"pm.test(\"Has accreditation id in response matching location header\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"id\"]).to.equal(accreditationId);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"requestor\": {{RequestorOrgNo}},\r\n  \"subject\": {{SubjectOrgNo}},\r\n  \"evidenceRequests\": [\r\n    {\r\n      \"evidenceCodeName\": \"AnnualFinancialReport\",\r\n\t  \"parameters\" : [\r\n\t\t{\r\n\t\t\t\"evidenceParamName\" : \"NumberOfYears\",\r\n\t\t\t\"value\" : 2\r\n\t\t}]\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/authorization",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"authorization"
									]
								}
							},
							"response": []
						},
						{
							"name": "evidence/<accreditation-id>",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dba7959a-7338-4bec-bd5c-b15820f3ff58",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has valid JSON structure in response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(typeof jsonData).to.equal(\"object\");",
											"});",
											"",
											"pm.test(\"Has evidence code name in JSON response\", function () {",
											"    var ret = pm.response.json();",
											"",
											"    pm.expect(ret.length).to.be.above(0);",
											"    pm.expect(typeof ret[0][\"evidenceCodeName\"]).to.equal(\"string\");",
											"    pm.expect(ret[0][\"evidenceCodeName\"].length).to.be.above(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/evidence/{{AccreditationId}}",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"evidence",
										"{{AccreditationId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "evidence/<accreditation-id>/AnnualFinancialReport",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ba6f1ecb-d1e7-44e4-bcd8-9381b22b4357",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has valid JSON structure in response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(typeof jsonData).to.equal(\"object\");",
											"});",
											"",
											"pm.test(\"Has evidence status and values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"evidenceStatus\"][\"evidenceCodeName\"] !== null).to.be.true;",
											"    pm.expect(jsonData[\"evidenceValues\"].length).to.be.above(0);",
											"    pm.expect(jsonData[\"evidenceValues\"][0][\"value\"] !== null).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"type": "text",
										"value": "{{SubscriptionKey}}"
									},
									{
										"key": "X-NADOBE-CERT",
										"type": "text",
										"value": "{{HeaderCertificate}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/evidence/{{AccreditationId}}/AnnualFinancialReport",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"evidence",
										"{{AccreditationId}}",
										"AnnualFinancialReport"
									]
								}
							},
							"response": []
						},
						{
							"name": "evidence/<accreditation-id>",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "885f1f97-c00f-461c-bfcf-6310afe15811",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											"",
											"pm.test(\"Has empty body\", function () {",
											"    pm.response.to.have.body(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/accreditations/{{AccreditationId}}",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"accreditations",
										"{{AccreditationId}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Non-runnable (requires consent)",
			"item": [
				{
					"name": "CRITERION.EXCLUSION.CONTRIBUTIONS.PAYMENT_OF_TAXES",
					"item": [
						{
							"name": "authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77dc7775-5a87-448c-8ff4-8d78e0c30a3a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has valid JSON structure in response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(typeof jsonData).to.equal(\"object\");",
											"});",
											"",
											"pm.test(\"Location header is present\", function () {",
											"    pm.response.to.have.header(\"Location\");",
											"});",
											"",
											"// Set accreditation ID to global in order to use in subsequent requests",
											"var loc = pm.response.headers.get(\"Location\");",
											"var accreditationId = loc.match(/\\/evidence\\/(.+)/)[1];",
											"pm.environment.set(\"AccreditationId\", accreditationId);",
											"",
											"pm.test(\"Has accreditation id in response matching location header\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"id\"]).to.equal(accreditationId);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"requestor\": {{RequestorOrgNo}},\r\n  \"subject\": {{SubjectOrgNo}},\r\n  \"evidenceRequests\": [\r\n    {\r\n      \"evidenceCodeName\": \"CRITERION.EXCLUSION.CONTRIBUTIONS.PAYMENT_OF_TAXES\",\r\n      \"requestConsent\" : true\r\n    }\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/authorization",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"authorization"
									]
								}
							},
							"response": []
						},
						{
							"name": "evidence/<accreditation-id>",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dba7959a-7338-4bec-bd5c-b15820f3ff58",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has valid JSON structure in response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(typeof jsonData).to.equal(\"object\");",
											"});",
											"",
											"pm.test(\"Has evidence code name in JSON response\", function () {",
											"    var ret = pm.response.json();",
											"",
											"    pm.expect(ret.length).to.be.above(0);",
											"    pm.expect(typeof ret[0][\"evidenceCodeName\"]).to.equal(\"string\");",
											"    pm.expect(ret[0][\"evidenceCodeName\"].length).to.be.above(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/evidence/{{AccreditationId}}",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"evidence",
										"{{AccreditationId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "evidence/<accreditation-id>/CRITERION.EXCLUSION.CONTRIBUTIONS.PAYMENT_OF_TAXES",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ba6f1ecb-d1e7-44e4-bcd8-9381b22b4357",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has valid JSON structure in response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(typeof jsonData).to.equal(\"object\");",
											"});",
											"",
											"pm.test(\"Has evidence status and values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"evidenceStatus\"][\"evidenceCodeName\"] !== null).to.be.true;",
											"    pm.expect(jsonData[\"evidenceValues\"].length).to.be.above(0);",
											"    pm.expect(jsonData[\"evidenceValues\"][0][\"value\"] !== null).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/evidence/{{AccreditationId}}/CRITERION.EXCLUSION.CONTRIBUTIONS.PAYMENT_OF_TAXES",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"evidence",
										"{{AccreditationId}}",
										"CRITERION.EXCLUSION.CONTRIBUTIONS.PAYMENT_OF_TAXES"
									]
								}
							},
							"response": []
						},
						{
							"name": "evidence/<accreditation-id>",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "885f1f97-c00f-461c-bfcf-6310afe15811",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											"",
											"pm.test(\"Has empty body\", function () {",
											"    pm.response.to.have.body(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/accreditations/{{AccreditationId}}",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"accreditations",
										"{{AccreditationId}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Arrears",
					"item": [
						{
							"name": "authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77dc7775-5a87-448c-8ff4-8d78e0c30a3a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has valid JSON structure in response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(typeof jsonData).to.equal(\"object\");",
											"});",
											"",
											"pm.test(\"Location header is present\", function () {",
											"    pm.response.to.have.header(\"Location\");",
											"});",
											"",
											"// Set accreditation ID to global in order to use in subsequent requests",
											"var loc = pm.response.headers.get(\"Location\");",
											"var accreditationId = loc.match(/\\/evidence\\/(.+)/)[1];",
											"pm.environment.set(\"AccreditationId\", accreditationId);",
											"",
											"pm.test(\"Has accreditation id in response matching location header\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"id\"]).to.equal(accreditationId);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"requestor\": {{RequestorOrgNo}},\r\n  \"subject\": {{SubjectOrgNo}},\r\n  \"evidenceRequests\": [\r\n    {\r\n      \"evidenceCodeName\": \"Arrears\",\r\n      \"requestConsent\" : true\r\n    }]\r\n}"
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/authorization",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"authorization"
									]
								}
							},
							"response": []
						},
						{
							"name": "evidence/<accreditation-id>",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dba7959a-7338-4bec-bd5c-b15820f3ff58",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has valid JSON structure in response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(typeof jsonData).to.equal(\"object\");",
											"});",
											"",
											"pm.test(\"Has evidence code name in JSON response\", function () {",
											"    var ret = pm.response.json();",
											"",
											"    pm.expect(ret.length).to.be.above(0);",
											"    pm.expect(typeof ret[0][\"evidenceCodeName\"]).to.equal(\"string\");",
											"    pm.expect(ret[0][\"evidenceCodeName\"].length).to.be.above(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/evidence/{{AccreditationId}}",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"evidence",
										"{{AccreditationId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "evidence/<accreditation-id>/Arrears",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ba6f1ecb-d1e7-44e4-bcd8-9381b22b4357",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has valid JSON structure in response\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(typeof jsonData).to.equal(\"object\");",
											"});",
											"",
											"pm.test(\"Has evidence status and values\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData[\"evidenceStatus\"][\"evidenceCodeName\"] !== null).to.be.true;",
											"    pm.expect(jsonData[\"evidenceValues\"].length).to.be.above(0);",
											"    pm.expect(jsonData[\"evidenceValues\"][0][\"value\"] !== null).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"type": "text",
										"value": "{{SubscriptionKey}}"
									},
									{
										"key": "X-NADOBE-CERT",
										"type": "text",
										"value": "{{HeaderCertificate}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/evidence/{{AccreditationId}}/Arrears",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"evidence",
										"{{AccreditationId}}",
										"Arrears"
									]
								}
							},
							"response": []
						},
						{
							"name": "evidence/<accreditation-id>",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "885f1f97-c00f-461c-bfcf-6310afe15811",
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											"",
											"pm.test(\"Has empty body\", function () {",
											"    pm.response.to.have.body(\"\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Ocp-Apim-Subscription-Key",
										"value": "{{SubscriptionKey}}",
										"type": "text"
									},
									{
										"key": "X-NADOBE-CERT",
										"value": "{{HeaderCertificate}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{Scheme}}://{{HostName}}/{{Environment}}/{{ApiVersion}}/accreditations/{{AccreditationId}}",
									"protocol": "{{Scheme}}",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"{{Environment}}",
										"{{ApiVersion}}",
										"accreditations",
										"{{AccreditationId}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "9d7278e3-227e-4e12-b8c0-e95eca93ff43",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "3fa01cb0-dc19-46a4-a948-defbfadaa7dd",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}
